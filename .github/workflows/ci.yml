name: ci
on:
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  contents: write
  pull-requests: write

jobs:
  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Install rust toolchain (1.82.0) + clippy + rustfmt
        uses: dtolnay/rust-toolchain@1.82.0
        with:
          components: clippy, rustfmt
          targets: wasm32-unknown-unknown
      - name: Cargo fmt
        run: cargo fmt --all --check
        working-directory: chain
      - name: Cargo clippy
        run: SKIP_WASM_BUILD=1 cargo clippy --all-targets --all-features -- -D warnings
        working-directory: chain
      - name: Cargo test
        run: SKIP_WASM_BUILD=1 cargo test --workspace --all-features
        working-directory: chain

  policy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Policy gate
        run: |
          python .github/policy_gate.py "$(jq -r '.pull_request.number' <<< '${{ toJson(github.event) }}')" .github/policy.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          MAX_ADDITIONS: "20000"

  automerge:
    needs: [rust, policy]
    if: |
      github.event.pull_request.user.login == 'euticus' &&
      needs.rust.result == 'success' &&
      needs.policy.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Enable auto-merge
        run: gh pr merge ${{ github.event.pull_request.number }} --auto --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
